<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="[(${basePackage})].[(${module})].mapper.I[( ${entity.entityName} )]Mapper">

    <sql id="queryBaseInfo">
           SELECT <if test="pageVO == null"> ROW_NUMBER() OVER (ORDER BY o.id) AS RowNumber,</if>
        		[# th:each="field,userStat: ${entity.displayFields}"][( ${field.columnName} )] as [( ${field.fieldName} )][# th:if= !${userStat.last} ],[/]
        		[/]
           FROM
                [( ${entity.tableName} )]
    </sql>

    <sql id="queryCondition">
        <where>[# th:each="field : ${entity.displayFields}"]
            <if test="[( ${field.fieldName} )] != null">
                and [(${field.columnName})] = #{[( ${field.fieldName} )],jdbcType=[( ${field.jdbcType} )]}
            </if>[/]
        </where>
    </sql>

    <sql id="queryPagedCondition">
        <where>[# th:each="field : ${entity.displayFields}"]
            <if test="[( ${entity.lowerFirstEntityName} )].[( ${field.fieldName} )] != null">
                and [(${field.columnName})] = #{[( ${entity.lowerFirstEntityName} )].[( ${field.fieldName} )],jdbcType=[( ${field.jdbcType} )]}
            </if>[/]
        </where>
    </sql>

    <select id="findPaged[( ${entity.entityName} )]ListCount" resultType="java.lang.Integer">
       SELECT count(1) from (
          <include refid="queryBaseInfo"></include>
          <include refid="queryPagedCondition"></include>
       ) t
    </select>

    <select id="findPaged[( ${entity.entityName} )]List" resultType="[(${basePackage})].[(${module})].entity.[( ${entity.entityName} )]VO">
        <if test="pageVO != null">
            SELECT top(#{limit})
            a.engine, a.tableName, a.tableComment,a.createTime
            from (
                <include refid="queryBaseInfo"></include>
                <include refid="queryPagedCondition"></include>
            ) a
            where a.RowNumber > (#{page}-1)*#{limit}
        </if>
    </select>


    <select id="find[( ${entity.entityName} )]ById" parameterType="java.lang.Integer" resultType="[(${basePackage})].[(${module})].entity.[( ${entity.entityName} )]VO">
        <include refid="queryBaseInfo"></include>
        <where>
            [( ${entity.pkField.columnName} )] = #{[( ${entity.pkField.fieldName} )],jdbcType=[( ${entity.pkField.jdbcType} )]}
        </where>
    </select>

    <select id="find[( ${entity.entityName} )]List" resultType="[(${basePackage})].[(${module})].entity.[( ${entity.entityName} )]VO">
        <include refid="queryBaseInfo"></include>
        <include refid="queryCondition"></include>
    </select>

    <insert id="create[( ${entity.entityName} )]" parameterType="[(${basePackage})].[(${module})].entity.[( ${entity.entityName} )]VO">
        INSERT INTO [( ${entity.tableName} )]([# th:each="field,userStat : ${entity.displayFields}"]
            [( ${field.columnName} )][# th:if= !${userStat.last} ],[/] [/]
        ) VALUES ( [# th:each="field,userStat : ${entity.displayFields}"]
            #{[( ${field.fieldName} )],jdbcType=[( ${field.jdbcType} )]}[# th:if= !${userStat.last} ],[/] [/]
        )
    </insert>

    <update id="update[( ${entity.entityName} )]">
        UPDATE [( ${entity.tableName} )]
           SET [# th:each="field,userStat : ${entity.displayFields}"]
            [( ${field.columnName} )] = #{[( ${field.fieldName} )],jdbcType=[( ${field.jdbcType} )]}[# th:if= !${userStat.last} ],[/] [/]
          WHERE [( ${entity.pkField.columnName} )] = #{[( ${entity.pkField.fieldName} )],jdbcType=[( ${entity.pkField.jdbcType} )]}
    </update>

    <delete id="delete[( ${entity.entityName} )]" parameterType="java.lang.Integer">
        DELETE FROM [( ${entity.tableName} )]
        WHERE [( ${entity.pkField.columnName} )] = #{[( ${entity.pkField.fieldName} )],jdbcType=[( ${entity.pkField.jdbcType} )]}
    </delete>

</mapper>